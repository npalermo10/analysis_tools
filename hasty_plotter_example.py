import numpy as np
import analysis_tools

lmr = np.random.rand(23, 3,2, 8,500)
lmr[:,:,0] = lmr[:,:,0] + 1

x_axis_labels = np.around(np.linspace(0, 100, 8), 2)
# we will pass this data into hasty plotter. The shape of the data must have an axis which represents different trials (usually axis 0) and an axis that represents time (usually axis -1, the last axis). Besides those axes, there should be at least one more. If for some reason you don't have a third axis, use numpy.expand_dims so that you get that extra axis (typically this shouldn't happen). Also you can set a plot title by passing it as an argument into hasty plotter.
# the trials axis and time axis are used by all of the hasty plotter plots so they should be called only once hasty plotter is instantiated. 
# the 0 axis generated by arraybuilder will always be the "trials axis" so trials axis is usually assumed to be 0 unless you specify it. 
# the time axis is usually the last axis so by default it is set to -1 but you can also specify this

plotter3d = analysis_tools.Hasty_plotter(data = lmr, plot_title = 'example plots 3D', trials_axis = 0, time_axis = 4)

# We can select different types of plots from hasty plotter's functions but we need to decide how we want each data axis represented.
# "colors_axis" is the axis along which different colors will be plotted on the same graph
# "subplots_axis" is the axis along which different subplots will be made. for now this only works with one dimensional subplots
# " x_axis" is the axis which will represent the x axis of each subplot
# for 2D heatmaps you need a y_axis as well

plotter3d.plot_mean_resp(colors_axis = 2, colors_labels = ['cold', 'warm'], subplots_axis = 1, subplots_labels = ['slow', 'med', 'fast'], x_axis = 3, x_ticks = x_axis_labels, x_label = "magnitude")

plotter3d.plot_mean_resp_heatmap(x_axis = 3, x_ticks = x_axis_labels, y_axis = 1, subplots_axis = 2, subplots_labels = ['cold', 'warm'], y_ticks = ['slow', 'med', 'fast'], x_label = "magnitude", cmap = 'viridis')


lmr = np.random.rand(23, 3,2, 500)
lmr[:,0] = lmr[:,0] + 1
lmr[:,1] = lmr[:,1] + 2
lmr[:,2] = lmr[:,2] + 3

lmr[:,:,0] = lmr[:,:,0] + 1
lmr[:,:,1] = lmr[:,:,1] + 2

plotter2d = analysis_tools.Hasty_plotter(data = lmr, plot_title = 'example plots 2D', starting_fig_num = len(plotter3d.figs) + 1) # assumes trials axis is 0 and time axis is -1. setting the starting figure number ensures we aren't overwriting figures from previous plotter.

plotter2d.plot_time_series(colors_axis = 2, colors_labels = ['cold', 'warm'], subplots_axis = 1, subplots_labels =  ['slow', 'med', 'fast'])

# a hasty plotter object provides access to individual figures and subplots that it creates so you can always make fine adjustments to plots afterwards.
ylabels = ['voltage', 'height',  'weight']
for i_ax, ax in enumerate(plotter2d.figs[0].axes):
    ax.set_ylabel(ylabels[i_ax])

# hasty plotter comes with some convenience functions to manipulate all subplots in a figure simultaneously       
plotter2d.eq_ylims(fig_ind = 0)
